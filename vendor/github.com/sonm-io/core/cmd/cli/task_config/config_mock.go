// Automatically generated by MockGen. DO NOT EDIT!
// Source: cmd/cli/task_config/config.go

package task_config

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of TaskConfig interface
type MockTaskConfig struct {
	ctrl     *gomock.Controller
	recorder *_MockTaskConfigRecorder
}

// Recorder for MockTaskConfig (not exported)
type _MockTaskConfigRecorder struct {
	mock *MockTaskConfig
}

func NewMockTaskConfig(ctrl *gomock.Controller) *MockTaskConfig {
	mock := &MockTaskConfig{ctrl: ctrl}
	mock.recorder = &_MockTaskConfigRecorder{mock}
	return mock
}

func (_m *MockTaskConfig) EXPECT() *_MockTaskConfigRecorder {
	return _m.recorder
}

func (_m *MockTaskConfig) GetImageName() string {
	ret := _m.ctrl.Call(_m, "GetImageName")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetImageName() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetImageName")
}

func (_m *MockTaskConfig) GetEntrypoint() string {
	ret := _m.ctrl.Call(_m, "GetEntrypoint")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetEntrypoint() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEntrypoint")
}

func (_m *MockTaskConfig) GetSSHKey() string {
	ret := _m.ctrl.Call(_m, "GetSSHKey")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetSSHKey() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSSHKey")
}

func (_m *MockTaskConfig) GetEnvVars() map[string]string {
	ret := _m.ctrl.Call(_m, "GetEnvVars")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetEnvVars() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEnvVars")
}

func (_m *MockTaskConfig) GetRegistryName() string {
	ret := _m.ctrl.Call(_m, "GetRegistryName")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetRegistryName() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRegistryName")
}

func (_m *MockTaskConfig) GetRegistryAuth() string {
	ret := _m.ctrl.Call(_m, "GetRegistryAuth")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetRegistryAuth() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRegistryAuth")
}

func (_m *MockTaskConfig) GetMinersPreferred() []string {
	ret := _m.ctrl.Call(_m, "GetMinersPreferred")
	ret0, _ := ret[0].([]string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetMinersPreferred() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMinersPreferred")
}

func (_m *MockTaskConfig) GetCPUCount() uint64 {
	ret := _m.ctrl.Call(_m, "GetCPUCount")
	ret0, _ := ret[0].(uint64)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetCPUCount() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCPUCount")
}

func (_m *MockTaskConfig) GetRAMCount() uint64 {
	ret := _m.ctrl.Call(_m, "GetRAMCount")
	ret0, _ := ret[0].(uint64)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetRAMCount() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRAMCount")
}

func (_m *MockTaskConfig) GetCPUType() string {
	ret := _m.ctrl.Call(_m, "GetCPUType")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetCPUType() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetCPUType")
}

func (_m *MockTaskConfig) GetGPURequirement() bool {
	ret := _m.ctrl.Call(_m, "GetGPURequirement")
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetGPURequirement() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetGPURequirement")
}

func (_m *MockTaskConfig) GetGPUType() string {
	ret := _m.ctrl.Call(_m, "GetGPUType")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockTaskConfigRecorder) GetGPUType() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetGPUType")
}
